-- local cmp = require("cmp")
-- local luasnip = require("luasnip")
--
-- cmp.setup({
--
--     snippet = {
--         expand = function(args)
--             luasnip.lsp_expand(args.body)
--         end,
--     },
--
--     mapping = cmp.mapping.preset.insert({
--         ["<C-Space>"] = cmp.mapping.complete(),
--         ["<CR>"] = cmp.mapping.confirm({ select = true }),
--         ["<C-e>"] = cmp.mapping.close(),
--         ["<C-d>"] = cmp.mapping.scroll_docs(-4),
--         ["<C-u>"] = cmp.mapping.scroll_docs(4),
--
--         -- ["<TAB>"] = cmp.mapping(cmp.mapping.select_next_item(), { "i" , "s" }),
--         -- ["<S-TAB>"] = cmp.mapping(cmp.mapping.select_prev_item(), { "i" , "s" }),
--
--         ["<Tab>"] = cmp.mapping(function(fallback)
--             if cmp.visible() then 
--                 cmp.select_next_item()
--             elseif luasnip.expand_or_jumpable() then
--                 luasnip.expand_or_jump()
--             else 
--                 fallback()
--             end
--         end, { "i", "s" }),
--
--         ["<S-Tab>"] = cmp.mapping(function(fallback)
--             if cmp.visible() then
--                 cmp.select_prev_item()
--             elseif luasnip.jumpable(-1) then
--                 luasnip.jump(-1)
--             else
--                 fallback()
--             end
--         end, { "i", "s" }),
--     }),
--
--     sources = cmp.config.sources ({
--         { name = "nvim_lsp" },
--         { name = "luasnip" },
--         { name = "buffer" },
--         { name = "path" },
--     }),
-- })
